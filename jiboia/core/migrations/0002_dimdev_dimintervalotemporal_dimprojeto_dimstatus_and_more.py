# Generated by Django 4.2.16 on 2025-10-20 15:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DimDev',
            fields=[
                ('id', models.AutoField(help_text='ID Natural do Desenvolvedor', primary_key=True, serialize=False)),
                ('dev_name', models.CharField(max_length=255)),
                ('id_dev_jiba', models.IntegerField(db_index=True, help_text='ID do Desenvolvedor no jiboia')),
                ('id_dev_jira', models.IntegerField(db_index=True, help_text='ID do Desenvolvedor no jira')),
                ('valor_hora', models.DecimalField(blank=True, decimal_places=2, help_text='Valor da hora do desenvolvedor', max_digits=10, null=True)),
            ],
            options={
                'verbose_name': 'Dimensão Desenvolvedor',
                'db_table': 'dim_dev',
            },
        ),
        migrations.CreateModel(
            name='DimIntervaloTemporal',
            fields=[
                ('id', models.AutoField(help_text='ID Natural do Intervalo Temporal', primary_key=True, serialize=False)),
                ('granularity_type', models.CharField(choices=[('DIA', 'Dia'), ('SEMANA', 'Semana'), ('MES', 'Mês'), ('TRIMESTRE', 'Trimestre'), ('SEMESTRE', 'Semestre'), ('ANO', 'Ano')], help_text='Tipo de Período (Dia, Mês, etc.)', max_length=50)),
                ('start_date', models.DateTimeField(blank=True, help_text='Data de inicio em dias, horas e segundos', null=True)),
                ('end_date', models.DateTimeField(blank=True, help_text='Data de fim em dias, horas e segundos', null=True)),
            ],
            options={
                'verbose_name': 'Dimensão Intervalo Temporal',
                'db_table': 'dim_intervalo_temporal',
            },
        ),
        migrations.CreateModel(
            name='DimProjeto',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('id_project_jiba', models.IntegerField(db_index=True, help_text='ID Projeto no jiboia', unique=True)),
                ('id_project_jira', models.IntegerField(db_index=True, help_text='ID Projeto no jira', unique=True)),
                ('project_name', models.CharField(max_length=255)),
                ('start_date', models.DateField(help_text='Data do inicio do projeto')),
                ('end_date', models.DateField(blank=True, help_text='Data do fim do projeto', null=True)),
            ],
            options={
                'verbose_name': 'Dimensão Projeto',
                'db_table': 'dim_projeto',
            },
        ),
        migrations.CreateModel(
            name='DimStatus',
            fields=[
                ('id', models.AutoField(help_text='ID Natural do Status', primary_key=True, serialize=False)),
                ('id_status_jira', models.IntegerField(db_index=True, help_text='ID do Status no jira')),
                ('id_status_jiba', models.IntegerField(db_index=True, help_text='ID do Status no jiboia')),
                ('status_name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Dimensão Status',
                'db_table': 'dim_status',
            },
        ),
        migrations.CreateModel(
            name='DimTipoIssue',
            fields=[
                ('id', models.AutoField(help_text='ID Natural do Tipo de Issue', primary_key=True, serialize=False)),
                ('id_type_jira', models.IntegerField(help_text='ID do Tipo de Issue no jira')),
                ('id_type_jiba', models.IntegerField(help_text='ID do Tipo de Issue no jiboia')),
                ('name_type', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Dimensão Tipo de Issue',
                'db_table': 'dim_issue_type',
            },
        ),
        migrations.CreateModel(
            name='FactEsforco',
            fields=[
                ('id', models.AutoField(help_text='ID Natural do Esforço', primary_key=True, serialize=False)),
                ('accumulated_cost', models.DecimalField(decimal_places=2, help_text='Custo total acumulado', max_digits=15)),
                ('accumulated_minutes', models.IntegerField(help_text='Total de minutos acumulados no período')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data do Fato Esforço foi criado')),
                ('dev', models.ForeignKey(help_text='Desenvolvedor que realizou o esforço', on_delete=django.db.models.deletion.PROTECT, to='core.dimdev')),
                ('project', models.ForeignKey(help_text='Projeto ao qual a Esforco pertence', on_delete=django.db.models.deletion.PROTECT, to='core.dimprojeto', verbose_name='Projeto')),
                ('worklog_interval', models.ForeignKey(help_text='Granularidade qual foi realizado e total de minutos (dia, semana, mês, etc.)', on_delete=django.db.models.deletion.PROTECT, to='core.dimintervalotemporal')),
            ],
        ),
        migrations.CreateModel(
            name='DimIssue',
            fields=[
                ('id', models.AutoField(help_text='ID Natural', primary_key=True, serialize=False)),
                ('id_issue_jiba', models.IntegerField(db_index=True, help_text='ID Original da Issue no jiboia')),
                ('id_issue_jira', models.IntegerField(db_index=True, help_text='ID Original da Issue no jira')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de criação da Issue')),
                ('start_date', models.DateTimeField(blank=True, help_text='Data de início da Issue', null=True)),
                ('issue_type', models.ForeignKey(help_text='Tipo da Issue', on_delete=django.db.models.deletion.PROTECT, to='core.dimtipoissue')),
                ('project', models.ForeignKey(help_text='Projeto da Issue', on_delete=django.db.models.deletion.PROTECT, to='core.dimprojeto')),
            ],
        ),
        migrations.CreateModel(
            name='FactProjectSnapshot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_project_cost_rs', models.DecimalField(decimal_places=2, help_text='Somatória das horas dos devs trabalhadas * valor hora respectivo', max_digits=15)),
                ('total_accumulated_minutes', models.DecimalField(decimal_places=2, help_text='Total de minutos já gastas em desenvolvimento', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de criação do snapshot')),
                ('projection_end_days', models.IntegerField(help_text='Somatória dos dias previsto em todas as issues não finalizadas')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.dimprojeto', verbose_name='Projeto')),
                ('snapshot_interval', models.ForeignKey(help_text='Período do Snapshot', on_delete=django.db.models.deletion.PROTECT, related_name='snapshots_projeto', to='core.dimintervalotemporal')),
            ],
            options={
                'verbose_name': 'Fato Projeto Snapshot',
                'db_table': 'fato_projeto_snapshot',
                'unique_together': {('project', 'snapshot_interval')},
            },
        ),
        migrations.CreateModel(
            name='FactIssue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('total_issue', models.IntegerField(help_text='Total de Issues dos filtros')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Data de criação no modelo dimensional')),
                ('issue_type', models.ForeignKey(help_text='Tipo da Issue (História, Tarefa, Bug, etc.)', on_delete=django.db.models.deletion.PROTECT, to='core.dimtipoissue', verbose_name='Tipo da Issue')),
                ('project', models.ForeignKey(help_text='Projeto ao qual a Issue pertence', on_delete=django.db.models.deletion.PROTECT, to='core.dimprojeto', verbose_name='Projeto')),
                ('status', models.ForeignKey(help_text='Status atual da Issue', on_delete=django.db.models.deletion.PROTECT, to='core.dimstatus', verbose_name='Status da Issue')),
                ('worklog_interval', models.ForeignKey(help_text='Granularidade qual foi realizado o trabalho', on_delete=django.db.models.deletion.PROTECT, related_name='esforco_issue', to='core.dimintervalotemporal')),
            ],
            options={
                'verbose_name': 'Fato Issue',
                'db_table': 'fato_issue',
                'indexes': [models.Index(fields=['project', 'worklog_interval'], name='fato_issue_project_b63d1f_idx')],
            },
        ),
    ]
